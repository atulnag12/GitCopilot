#!/usr/bin/env python3

import zipfile
import os
import difflib


def extract_jar_contents(jar_path):
    """Extracts the content of a JAR file into a dictionary."""
    jar_contents = {}
    with zipfile.ZipFile(jar_path, 'r') as jar:
        for file in jar.namelist():
            if not file.endswith('/'):  # Ignore directories
                jar_contents[file] = jar.read(file).decode('utf-8', errors='ignore')
    return jar_contents


def generate_diff_report(contents1, contents2):
    """Generates a diff report between two dictionaries representing JAR contents."""
    header = (
        "+-----------------------------+----------------------+------------------------------------------------------+\n"
        "| File Name                  | Status               | Content Differences                                  |\n"
        "+-----------------------------+----------------------+------------------------------------------------------+\n"
    )
    report = [header]

    all_files = set(contents1.keys()) | set(contents2.keys())

    for file in sorted(all_files):
        if file in contents1 and file in contents2:
            if contents1[file] == contents2[file]:
                status = "Identical"
                diff_content = "No differences"
            else:
                status = "Different"
                diff = '\n'.join(difflib.unified_diff(
                    contents1[file].splitlines(),
                    contents2[file].splitlines(),
                    lineterm=""
                ))
                diff_content = f"--- Differences:\n{diff}"
        elif file in contents1:
            status = "Missing in JAR 2"
            diff_content = f"Content in First JAR:\n{contents1[file]}"
        else:
            status = "Missing in JAR 1"
            diff_content = f"Content in Second JAR:\n{contents2[file]}"

        # Add the formatted row to the report
        row = (
            f"| {file:<27} | {status:<20} | {diff_content[:50]:<54} |\n"
            f"+-----------------------------+----------------------+------------------------------------------------------+\n"
        )
        report.append(row)

    return ''.join(report)


if __name__ == "__main__":
    import sys

    if len(sys.argv) != 3:
        print("Usage: compare_jars.py <path_to_jar1> <path_to_jar2>")
        sys.exit(1)

    jar1_path = sys.argv[1]
    jar2_path = sys.argv[2]

    # Extract JAR contents
    jar1_contents = extract_jar_contents(jar1_path)
    jar2_contents = extract_jar_contents(jar2_path)

    # Generate comparison report
    comparison_report = generate_diff_report(jar1_contents, jar2_contents)

    # Print the report to stdout
    print(comparison_report)
